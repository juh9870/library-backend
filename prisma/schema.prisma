// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider                  = "zod-prisma-types"
  createRelationValuesTypes = true
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Token {
  hash      String   @id
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @db.Uuid
}

model User {
  id             String       @id @default(uuid()) @db.Uuid
  createdAt      DateTime     @default(now())
  permissions    Permission[]
  username       String       @unique @db.VarChar(128) /// @zod.string.min(4).max(128)
  passwordHash   String       @db.VarChar(72)
  lastTokenReset DateTime     @default(now())
  books          Book[]
  tokens         Token[]
}

enum Permission {
  ADMIN
  APPROVE
  CREATE
  ARCHIVE
  EDIT
  DELETE
}

model Book {
  id             String    @id @default(uuid()) @db.Uuid
  title          String
  imageFile      String?
  bookFile       String?
  description    String
  state          BookState
  published_date DateTime?
  tags           Tag[]     @relation("BookTag")
  User           User?     @relation(fields: [userId], references: [id], onDelete: SetNull)
  userId         String?   @db.Uuid

  @@index([state])
}

model Tag {
  id    Int     @id @default(autoincrement())
  name  String
  type  TagType
  books Book[]  @relation("BookTag")

  @@unique([type, name])
}

enum TagType {
  GENRE
  AUTHOR
  MISC
}

enum BookState {
  DRAFT
  UNAPPROVED
  VISIBLE
  ARCHIVED
}
